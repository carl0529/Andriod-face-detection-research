// Generated by view binder compiler. Do not edit!
package com.android.example.cameraxbasic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.android.example.cameraxbasic.R;
import java.lang.Override;

public final class CameraUiContainerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ImageButton cameraSwitchButton;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageButton cameraSwitchButton1;

  @NonNull
  public final ConstraintLayout cameraUiContainer;

  private CameraUiContainerBinding(@NonNull ConstraintLayout rootView,
      @Nullable ImageButton cameraSwitchButton, @Nullable ImageButton cameraSwitchButton1,
      @NonNull ConstraintLayout cameraUiContainer) {
    this.rootView = rootView;
    this.cameraSwitchButton = cameraSwitchButton;
    this.cameraSwitchButton1 = cameraSwitchButton1;
    this.cameraUiContainer = cameraUiContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CameraUiContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CameraUiContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.camera_ui_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CameraUiContainerBinding bind(@NonNull View rootView) {
    ImageButton cameraSwitchButton = rootView.findViewById(R.id.camera_switch_button);

    ImageButton cameraSwitchButton1 = rootView.findViewById(R.id.camera_switch_button);

    ConstraintLayout cameraUiContainer = (ConstraintLayout) rootView;

    return new CameraUiContainerBinding((ConstraintLayout) rootView, cameraSwitchButton,
        cameraSwitchButton1, cameraUiContainer);
  }
}
